/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useFBX, useAnimations } from "@react-three/drei";
import { useControls } from "leva";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

const Ironman = (props) => {
    const { nodes, materials } = useGLTF("./iron_man/ironman.gltf");

    const {animations: JabCross} = useFBX("./iron_man/animations/Jab Cross.fbx");
    const {animations: JumpingDown} = useFBX("./iron_man/animations/Jumping Down.fbx");
    const {animations: CrouchToStand} = useFBX("./iron_man/animations/Crouch To Stand.fbx");
    const {animations: SillyDancing} = useFBX("./iron_man/animations/Silly Dancing.fbx");

    JabCross[0].name = "JabCross";
    JumpingDown[0].name = "JumpingDown";
    CrouchToStand[0].name = "CrouchToStand";
    SillyDancing[0].name = "SillyDancing";

    const avatarRef = useRef();

    const { animation } = useControls({animation: {value: JabCross[0].name, options: {JabCross: JabCross[0].name, JumpingDown: JumpingDown[0].name, CrouchToStand: CrouchToStand[0].name, SillyDancing: SillyDancing[0].name}}});
    const { position } = useControls({position: {value: [0, 0, 0], step: 0.1}});
    const { rotation } = useControls({rotation: {value: [0, 0, 0], step: 0.1}});

    const { actions, names } = useAnimations([JabCross[0], JumpingDown[0], CrouchToStand[0], SillyDancing[0]], avatarRef);
    console.log(names);

    useEffect(() => {
        console.log(animation);
        console.log(names);
        actions[names[0]].reset().fadeIn(0.5).play();
        return () => {
            actions[names[0]].reset().fadeOut(0.5);
        }
    }, [animation]);


    return (
        <group {...props} dispose={null} ref={avatarRef} position={position} rotation={rotation}>
            <group name="Scene">
                <group
                    name="Sketchfab_model"
                    rotation={[-Math.PI / 2, 0, 0]}
                    userData={{ name: "Sketchfab_model" }}
                >
                    <group
                        name="Octaneobjcleanermaterialmergergles"
                        userData={{ name: "Octane.obj.cleaner.materialmerger.gles" }}
                    >
                        <mesh
                            name="Object_2"
                            castShadow
                            receiveShadow
                            geometry={nodes.Object_2.geometry}
                            material={materials["default"]}
                            scale={0.001}
                            userData={{ name: "Object_2" }}
                        />
                        <mesh
                            name="Object_3"
                            castShadow
                            receiveShadow
                            geometry={nodes.Object_3.geometry}
                            material={materials["default"]}
                            scale={0.001}
                            userData={{ name: "Object_3" }}
                        />
                        <mesh
                            name="Object_4"
                            castShadow
                            receiveShadow
                            geometry={nodes.Object_4.geometry}
                            material={materials["default"]}
                            scale={0.001}
                            userData={{ name: "Object_4" }}
                        />
                    </group>
                </group>
            </group>
        </group>
    );
}

export default Ironman;

useGLTF.preload("./iron_man/ironman.gltf");
useFBX.preload("./iron_man/animations/Jab Cross.fbx");
useFBX.preload("./iron_man/animations/Jumping Down.fbx");
useFBX.preload("./iron_man/animations/Crouch To Stand.fbx");
useFBX.preload("./iron_man/animations/Silly Dancing.fbx");
